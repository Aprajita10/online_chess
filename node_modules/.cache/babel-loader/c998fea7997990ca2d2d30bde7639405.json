{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aprajita rtm\\\\Desktop\\\\chess\\\\chess_app\\\\chess_game\\\\src\\\\Board.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Boardsquare from './BoardSquare';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Board({\n  board,\n  turn\n}) {\n  _s();\n\n  const [currBoard, setCurrBoard] = useState([]);\n  useEffect(() => {\n    setCurrBoard(turn === 'w' ? board.flat() : board.flat().reverse());\n  }, [board, turn]);\n\n  function getXYPosition(i) {\n    const x = turn === 'w' ? i % 8 : Math.abs(i % 8 - 7);\n    const y = turn === 'w' ? Math.abs(Math.floor(i / 8) - 7) : Math.floor(i / 8);\n    return {\n      x,\n      y\n    };\n  }\n\n  function isBlack(i) {\n    const {\n      x,\n      y\n    } = getXYPosition(i);\n    return (x + y) % 2 === 1;\n  }\n\n  function getPosition(i) {\n    const {\n      x,\n      y\n    } = getXYPosition(i);\n    const letter = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'][x];\n    return `${letter}${y + 1}`;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-100 h-100 d-flex flex-wrap\",\n    children: currBoard.flat().map((piece, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"square\",\n      children: /*#__PURE__*/_jsxDEV(BoardSquare, {\n        piece: piece,\n        black: isBlack(i),\n        position: getPosition(i)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 12\n  }, this);\n}\n\n_s(Board, \"xYAMG0Z+0RcqSsVWq1tKi3AnEbc=\");\n\n_c = Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["C:/Users/aprajita rtm/Desktop/chess/chess_app/chess_game/src/Board.jsx"],"names":["React","useEffect","useState","Boardsquare","Board","board","turn","currBoard","setCurrBoard","flat","reverse","getXYPosition","i","x","Math","abs","y","floor","isBlack","getPosition","letter","map","piece"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AACA,eAAe,SAASC,KAAT,CAAe;AAACC,EAAAA,KAAD;AAAOC,EAAAA;AAAP,CAAf,EAA4B;AAAA;;AACvC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,YAAY,CACVF,IAAI,KAAK,GAAT,GAAeD,KAAK,CAACI,IAAN,EAAf,GAA8BJ,KAAK,CAACI,IAAN,GAAaC,OAAb,EADpB,CAAZ;AAGD,GAJM,EAIJ,CAACL,KAAD,EAAQC,IAAR,CAJI,CAAT;;AAKA,WAASK,aAAT,CAAuBC,CAAvB,EAAyB;AACrB,UAAMC,CAAC,GAAGP,IAAI,KAAK,GAAT,GAAeM,CAAC,GAAG,CAAnB,GAAuBE,IAAI,CAACC,GAAL,CAAUH,CAAC,GAAG,CAAL,GAAU,CAAnB,CAAjC;AACA,UAAMI,CAAC,GACLV,IAAI,KAAK,GAAT,GACIQ,IAAI,CAACC,GAAL,CAASD,IAAI,CAACG,KAAL,CAAWL,CAAC,GAAG,CAAf,IAAoB,CAA7B,CADJ,GAEIE,IAAI,CAACG,KAAL,CAAWL,CAAC,GAAG,CAAf,CAHN;AAIA,WAAO;AAAEC,MAAAA,CAAF;AAAKG,MAAAA;AAAL,KAAP;AACH;;AACD,WAASE,OAAT,CAAiBN,CAAjB,EAAmB;AACf,UAAM;AAACC,MAAAA,CAAD;AAAGG,MAAAA;AAAH,QAAOL,aAAa,CAACC,CAAD,CAA1B;AACA,WAAM,CAACC,CAAC,GAAGG,CAAL,IAAU,CAAV,KAAgB,CAAtB;AACH;;AACD,WAASG,WAAT,CAAqBP,CAArB,EAAuB;AACnB,UAAM;AAACC,MAAAA,CAAD;AAAGG,MAAAA;AAAH,QAAOL,aAAa,CAACC,CAAD,CAA1B;AACA,UAAMQ,MAAM,GAAG,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,EAAiB,GAAjB,EAAqB,GAArB,EAAyB,GAAzB,EAA6B,GAA7B,EAAkCP,CAAlC,CAAf;AACA,WAAQ,GAAEO,MAAO,GAAEJ,CAAC,GAAG,CAAE,EAAzB;AACH;;AACD,sBAAO;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA,cACFT,SAAS,CAACE,IAAV,GAAkBY,GAAlB,CAAsB,CAACC,KAAD,EAAOV,CAAP,kBACvB;AAAa,MAAA,SAAS,EAAC,QAAvB;AAAA,6BACI,QAAC,WAAD;AAAa,QAAA,KAAK,EAAEU,KAApB;AAA2B,QAAA,KAAK,EAAEJ,OAAO,CAACN,CAAD,CAAzC;AAA8C,QAAA,QAAQ,EAAEO,WAAW,CAACP,CAAD;AAAnE;AAAA;AAAA;AAAA;AAAA;AADJ,OAAUA,CAAV;AAAA;AAAA;AAAA;AAAA,YADC;AADE;AAAA;AAAA;AAAA;AAAA,UAAP;AAQH;;GAhCuBR,K;;KAAAA,K","sourcesContent":["import React,{useEffect,useState} from 'react';\r\nimport Boardsquare from './BoardSquare';\r\nexport default function Board({board,turn}){\r\n    const [currBoard, setCurrBoard] = useState([])\r\n    useEffect(() => {\r\n        setCurrBoard(\r\n          turn === 'w' ? board.flat() : board.flat().reverse()\r\n        )\r\n      }, [board, turn])\r\n    function getXYPosition(i){\r\n        const x = turn === 'w' ? i % 8 : Math.abs((i % 8) - 7)\r\n        const y =\r\n          turn === 'w'\r\n            ? Math.abs(Math.floor(i / 8) - 7)\r\n            : Math.floor(i / 8)\r\n        return { x, y }\r\n    }\r\n    function isBlack(i){\r\n        const {x,y} =getXYPosition(i)\r\n        return(x + y) % 2 === 1\r\n    }\r\n    function getPosition(i){\r\n        const {x,y} =getXYPosition(i)\r\n        const letter = ['a','b','c','d','e','f','g','h'][x]\r\n        return `${letter}${y + 1}`\r\n    }\r\n    return <div className=\"w-100 h-100 d-flex flex-wrap\">\r\n        {currBoard.flat( ).map((piece,i)=>(\r\n        <div key={i} className=\"square\">\r\n            <BoardSquare piece={piece} black={isBlack(i)} position={getPosition(i)} />\r\n        </div>\r\n             \r\n        ))}\r\n    </div>\r\n}"]},"metadata":{},"sourceType":"module"}