{"ast":null,"code":"import * as Chess from 'chess.js';\nimport { BehaviorSubject } from 'rxjs';\nconst chess = new Chess();\nexport const gameSubject = new BehaviorSubject();\nexport function initGame() {\n  updateGame();\n}\nexport function handleMove(from, to) {\n  const promotions = chess.moves({\n    verbose: true\n  }).filter(m => m.promotions);\n  console.log(moves);\n  move(from, to);\n}\nexport function move(from, to) {\n  const legalMove = chess.move({\n    from,\n    to\n  });\n\n  if (legalMove) {\n    updateGame();\n  }\n}\n\nfunction updateGame() {\n  const newGame = {\n    board: chess.board()\n  };\n  gameSubject.next(newGame);\n}","map":{"version":3,"sources":["C:/Users/aprajita rtm/Desktop/chess/chess_App/src/Game.js"],"names":["Chess","BehaviorSubject","chess","gameSubject","initGame","updateGame","handleMove","from","to","promotions","moves","verbose","filter","m","console","log","move","legalMove","newGame","board","next"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,UAAvB;AACA,SAASC,eAAT,QAAgC,MAAhC;AAEA,MAAMC,KAAK,GAAG,IAAIF,KAAJ,EAAd;AAGA,OAAO,MAAMG,WAAW,GAAC,IAAIF,eAAJ,EAAlB;AACP,OAAO,SAASG,QAAT,GAAmB;AACxBC,EAAAA,UAAU;AACX;AAED,OAAO,SAASC,UAAT,CAAoBC,IAApB,EAAyBC,EAAzB,EAA4B;AAClC,QAAMC,UAAU,GAACP,KAAK,CAACQ,KAAN,CAAY;AAC5BC,IAAAA,OAAO,EAAC;AADoB,GAAZ,EAEdC,MAFc,CAEPC,CAAC,IAAEA,CAAC,CAACJ,UAFE,CAAjB;AAGAK,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACAM,EAAAA,IAAI,CAACT,IAAD,EAAMC,EAAN,CAAJ;AAEA;AACD,OAAO,SAASQ,IAAT,CAAcT,IAAd,EAAmBC,EAAnB,EAAsB;AAC5B,QAAMS,SAAS,GAAGf,KAAK,CAACc,IAAN,CAAY;AAACT,IAAAA,IAAD;AAAMC,IAAAA;AAAN,GAAZ,CAAlB;;AACA,MAAGS,SAAH,EAAa;AACbZ,IAAAA,UAAU;AACT;AACD;;AACD,SAASA,UAAT,GAAqB;AACpB,QAAMa,OAAO,GAAC;AACbC,IAAAA,KAAK,EAACjB,KAAK,CAACiB,KAAN;AADO,GAAd;AAGAhB,EAAAA,WAAW,CAACiB,IAAZ,CAAiBF,OAAjB;AAEA","sourcesContent":["import * as Chess from 'chess.js'\r\nimport { BehaviorSubject } from 'rxjs'\r\n\r\nconst chess = new Chess()\r\n\r\n\r\nexport const gameSubject=new BehaviorSubject()\r\nexport function initGame(){\r\n  updateGame()\r\n}\r\n\r\nexport function handleMove(from,to){\r\n\tconst promotions=chess.moves({\r\n\t\tverbose:true\r\n\t}).filter(m=>m.promotions)\r\n\tconsole.log(moves)\r\n\tmove(from,to)\r\n\r\n}\r\nexport function move(from,to){\r\n const legalMove =\tchess.move( {from,to} )\r\n if(legalMove){\r\n\tupdateGame()\r\n }\r\n}\r\nfunction updateGame(){\r\n\tconst newGame={\r\n\t\tboard:chess.board()\r\n\t}\r\n\tgameSubject.next(newGame)\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}