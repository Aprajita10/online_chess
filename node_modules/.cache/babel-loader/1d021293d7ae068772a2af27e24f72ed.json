{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aprajita rtm\\\\Desktop\\\\chess\\\\chess_app\\\\chess_game\\\\src\\\\Board.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport BoardSquare from './Boardsquare';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Board({\n  board,\n  turn\n}) {\n  _s();\n\n  const [currBoard, setCurrBoard] = useState([]);\n  useEffect(() => {\n    setCurrBoard(turn === 'w' ? board.flat() : board.flat().reverse());\n  }, [board, turn]);\n\n  function getXYPosition(i) {\n    const x = turn === 'w' ? i % 8 : Math.abs(i % 8 - 7);\n    const y = turn === 'w' ? Math.abs(Math.floor(i / 8) - 7) : Math.floor(i / 8);\n    return {\n      x,\n      y\n    };\n  }\n\n  function isBlack(i) {\n    const {\n      x,\n      y\n    } = getXYPosition(i);\n    return (x + y) % 2 === 1;\n  }\n\n  function getPosition(i) {\n    const {\n      x,\n      y\n    } = getXYPosition(i);\n    const letter = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"][x];\n    return `${letter}${y + 1}`;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: currBoard.flat().map((piece, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"square\",\n      children: /*#__PURE__*/_jsxDEV(BoardSquare, {\n        piece: piece,\n        black: isBlack(i),\n        position: getPosition(i)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 4\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Board, \"7Nim/jjLe9sIE6Ca2y8KfbEhrm0=\");\n\n_c = Board;\n\nvar _c;\n\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"sources":["C:/Users/aprajita rtm/Desktop/chess/chess_app/chess_game/src/Board.jsx"],"names":["React","useEffect","useState","BoardSquare","Board","board","turn","currBoard","setCurrBoard","flat","reverse","getXYPosition","i","x","Math","abs","y","floor","isBlack","getPosition","letter","map","piece"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAGA,eAAe,SAASC,KAAT,CAAgB;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAhB,EAA+B;AAAA;;AAE7C,QAAM,CAACC,SAAD,EAAWC,YAAX,IAA2BN,QAAQ,CAAC,EAAD,CAAzC;AACAD,EAAAA,SAAS,CAAC,MAAI;AACfO,IAAAA,YAAY,CACXF,IAAI,KAAK,GAAT,GAAeD,KAAK,CAACI,IAAN,EAAf,GAA8BJ,KAAK,CAACI,IAAN,GAAaC,OAAb,EADnB,CAAZ;AAGE,GAJQ,EAIP,CAACL,KAAD,EAAOC,IAAP,CAJO,CAAT;;AAOG,WAASK,aAAT,CAAuBC,CAAvB,EAAyB;AAC3B,UAAMC,CAAC,GAAEP,IAAI,KAAK,GAAT,GAAeM,CAAC,GAAC,CAAjB,GAAqBE,IAAI,CAACC,GAAL,CAAUH,CAAC,GAAC,CAAH,GAAM,CAAf,CAA9B;AACA,UAAMI,CAAC,GAAEV,IAAI,KAAK,GAAT,GAAgBQ,IAAI,CAACC,GAAL,CAASD,IAAI,CAACG,KAAL,CAAWL,CAAC,GAAC,CAAb,IAAgB,CAAzB,CAAhB,GAA8CE,IAAI,CAACG,KAAL,CAAWL,CAAC,GAAC,CAAb,CAAvD;AACA,WAAO;AAACC,MAAAA,CAAD;AAAGG,MAAAA;AAAH,KAAP;AACA;;AACD,WAASE,OAAT,CAAiBN,CAAjB,EAAmB;AAClB,UAAM;AAACC,MAAAA,CAAD;AAAGG,MAAAA;AAAH,QAAQL,aAAa,CAACC,CAAD,CAA3B;AACA,WAAO,CAACC,CAAC,GAACG,CAAH,IAAM,CAAN,KAAY,CAAnB;AAEA;;AACD,WAASG,WAAT,CAAqBP,CAArB,EAAuB;AACtB,UAAM;AAACC,MAAAA,CAAD;AAAGG,MAAAA;AAAH,QAAQL,aAAa,CAACC,CAAD,CAA3B;AACA,UAAMQ,MAAM,GAAC,CAAC,GAAD,EAAK,GAAL,EAAS,GAAT,EAAa,GAAb,EAAiB,GAAjB,EAAqB,GAArB,EAAyB,GAAzB,EAA6B,GAA7B,EAAkCP,CAAlC,CAAb;AACA,WAAQ,GAAEO,MAAO,GAAEJ,CAAC,GAAC,CAAE,EAAvB;AACA;;AACD,sBACC;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,cACCT,SAAS,CAACE,IAAV,GAAiBY,GAAjB,CAAqB,CAACC,KAAD,EAAQV,CAAR,kBACpB;AAAa,MAAA,SAAS,EAAC,QAAvB;AAAA,6BACD,QAAC,WAAD;AACE,QAAA,KAAK,EAAEU,KADT;AAEE,QAAA,KAAK,EAAEJ,OAAO,CAACN,CAAD,CAFhB;AAGE,QAAA,QAAQ,EAAEO,WAAW,CAACP,CAAD;AAHvB;AAAA;AAAA;AAAA;AAAA;AADC,OAAUA,CAAV;AAAA;AAAA;AAAA;AAAA,YADD;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAcA;;GAvCuBR,K;;KAAAA,K","sourcesContent":["import React,{useEffect,useState} from 'react'\r\nimport BoardSquare from './Boardsquare'\r\n\r\n\r\nexport default function Board( {board ,turn} ){\r\n\r\n\tconst [currBoard,setCurrBoard] = useState([])\r\n\tuseEffect(()=>{\r\nsetCurrBoard(\r\n\tturn === 'w' ? board.flat() : board.flat().reverse()\r\n)\r\n\t},[board,turn])\r\n\r\n\r\n    function getXYPosition(i){\r\n\t\tconst x= turn === 'w' ? i%8 : Math.abs((i%8)-7)\r\n\t\tconst y= turn === 'w' ?  Math.abs(Math.floor(i/8)-7) : Math.floor(i/8)\r\n\t\treturn {x,y}\r\n\t}\r\n\tfunction isBlack(i){\r\n\t\tconst {x,y} = getXYPosition(i)\r\n\t\treturn (x+y)%2 === 1\r\n\r\n\t}\r\n\tfunction getPosition(i){\r\n\t\tconst {x,y} = getXYPosition(i)\r\n\t\tconst letter=[\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\"][x]\r\n\t\treturn `${letter}${y+1}`\r\n\t}\r\n\treturn(\r\n\t\t<div className=\"board\">\r\n\t\t{currBoard.flat().map((piece, i) => (\r\n\t\t  <div key={i} className=\"square\">\r\n\t\t\t<BoardSquare\r\n\t\t\t  piece={piece}\r\n\t\t\t  black={isBlack(i)}\r\n\t\t\t  position={getPosition(i)}\r\n\t\t\t/>\r\n\t\t  </div>\r\n\t\t))}\r\n\t  </div>\r\n\t\t)\r\n\t\r\n}"]},"metadata":{},"sourceType":"module"}