{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aprajita rtm\\\\Desktop\\\\chess\\\\chess_App\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { gameSubject, initGame } from './Game';\nimport Board from './Board';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [board, setBoard] = useState([]);\n  const [isGameOver, setIsGameOver] = useState();\n  const [result, setResult] = useState();\n  useEffect(() => {\n    initGame();\n    const subscribe = gameSubject.subscribe(game => {\n      setBoard(game.board);\n      setIsGameOver(game.isGameOver);\n      setResult(game.result);\n    });\n    return () => subscribe.unsubscribe();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [isGameOver && /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"vertical-text\",\n      children: [\"Game Over\", /*#__PURE__*/_jsxDEV(\"button\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"vertical-text\",\n          children: \"NEW GAME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-container\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        board: board\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }, this), result && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"vertical-text\",\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 1\n  }, this);\n}\n\n_s(App, \"LwBN8JevTyT18+fXzhXc78vQfkE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/aprajita rtm/Desktop/chess/chess_App/src/App.js"],"names":["React","useEffect","useState","gameSubject","initGame","Board","App","board","setBoard","isGameOver","setIsGameOver","result","setResult","subscribe","game","unsubscribe"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;;AAEA,OAAO,WAAP;AACA,SAAQC,WAAR,EAAqBC,QAArB,QAAoC,QAApC;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAIA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAOC,QAAP,IAAmBN,QAAQ,CAAC,EAAD,CAAjC;AACA,QAAM,CAACO,UAAD,EAAYC,aAAZ,IAA6BR,QAAQ,EAA3C;AACA,QAAM,CAACS,MAAD,EAAQC,SAAR,IAAqBV,QAAQ,EAAnC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,QAAQ;AACR,UAAMS,SAAS,GAAGV,WAAW,CAACU,SAAZ,CAAuBC,IAAD,IACxC;AACEN,MAAAA,QAAQ,CAACM,IAAI,CAACP,KAAN,CAAR;AACAG,MAAAA,aAAa,CAACI,IAAI,CAACL,UAAN,CAAb;AACAG,MAAAA,SAAS,CAACE,IAAI,CAACH,MAAN,CAAT;AACD,KALiB,CAAlB;AASA,WAAM,MAAME,SAAS,CAACE,WAAV,EAAZ;AAED,GAbQ,EAaN,EAbM,CAAT;AAgBA,sBACF;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,eACIN,UAAU,iBACT;AAAI,MAAA,SAAS,EAAG,eAAhB;AAAA,2CAGC;AAAA,+BACE;AAAM,UAAA,SAAS,EAAG,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFL,eAcE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACF,QAAC,KAAD;AAAO,QAAA,KAAK,EAAGF;AAAf;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA,YAdF,EAkBII,MAAM,iBAAI;AAAG,MAAA,SAAS,EAAG,eAAf;AAAA,gBACPA;AADO;AAAA;AAAA;AAAA;AAAA,YAlBd;AAAA;AAAA;AAAA;AAAA;AAAA,UADE;AA0BD;;GA/CQL,G;;KAAAA,G;AAiDT,eAAeA,GAAf","sourcesContent":["import React,{useEffect,useState} from 'react'\nimport logo from './logo.svg';\nimport './App.css';\nimport {gameSubject, initGame} from './Game';\nimport Board from './Board'\n\n\n\nfunction App() {\n  const [board,setBoard] = useState([])\n  const [isGameOver,setIsGameOver] = useState()\n  const [result,setResult] = useState()\n\n  useEffect(() => {\n    initGame()\n    const subscribe = gameSubject.subscribe((game) =>\n    {\n      setBoard(game.board) \n      setIsGameOver(game.isGameOver)\n      setResult(game.result)\n    }\n   \n    )\n\n    return() => subscribe.unsubscribe()\n\n  }, [])\n  \n\n  return (\n<div className=\"container\">\n  { isGameOver && ( \n     <h2 className = \"vertical-text\">\n        Game Over\n    \n      <button>\n        <span className = \"vertical-text\">\n          NEW GAME\n        </span>\n      </button>\n      </h2>\n    )\n  }\n\n  <div className=\"board-container\">\n<Board board={ board }/>\n  </div>\n  {\n    result && <p className = \"vertical-text\">\n      {result}\n\n    </p>\n  }\n</div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}