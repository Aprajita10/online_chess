{"ast":null,"code":"import * as Chess from 'chess.js';\nimport { BehaviorSubject } from 'rxjs';\nconst chess = new Chess();\nexport const gameSubject = new BehaviorSubject();\nexport function initGame() {\n  updateGame();\n}\nexport function handleMove(from, to) {\n  const promotions = chess.moves({\n    verbose: true\n  }).filter(m => m.promotion);\n  console.log(promotions);\n\n  if (promotions.some(p => `${p.from}:${p.to}` === `${from}:${to}`)) {\n    const pendingPromotion = {\n      from,\n      to,\n      color: promotions[0].color\n    };\n    updateGame(pendingPromotion);\n  }\n\n  const {\n    pendingPromotion\n  } = gameSubject.getValue();\n\n  if (!pendingPromotion) {\n    move(from, to);\n  }\n}\nexport function move(from, to, promotion) {\n  let tempMove = {\n    from,\n    to\n  };\n\n  if (promotion) {\n    tempMove.promotion;\n  }\n\n  const legalMove = chess.move({\n    from,\n    to\n  });\n\n  if (legalMove) {\n    updateGame();\n  }\n}\n\nfunction updateGame(pendingPromotion) {\n  const newGame = {\n    board: chess.board(),\n    pendingPromotion\n  };\n  gameSubject.next(newGame);\n}","map":{"version":3,"sources":["C:/Users/aprajita rtm/Desktop/chess/chess_App/src/Game.js"],"names":["Chess","BehaviorSubject","chess","gameSubject","initGame","updateGame","handleMove","from","to","promotions","moves","verbose","filter","m","promotion","console","log","some","p","pendingPromotion","color","getValue","move","tempMove","legalMove","newGame","board","next"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,UAAvB;AACA,SAASC,eAAT,QAAgC,MAAhC;AAEA,MAAMC,KAAK,GAAG,IAAIF,KAAJ,EAAd;AAGA,OAAO,MAAMG,WAAW,GAAC,IAAIF,eAAJ,EAAlB;AAEP,OAAO,SAASG,QAAT,GAAmB;AACxBC,EAAAA,UAAU;AACX;AAED,OAAO,SAASC,UAAT,CAAoBC,IAApB,EAAyBC,EAAzB,EAA4B;AAClC,QAAMC,UAAU,GAACP,KAAK,CAACQ,KAAN,CAAY;AAC5BC,IAAAA,OAAO,EAAC;AADoB,GAAZ,EAEdC,MAFc,CAEPC,CAAC,IAAEA,CAAC,CAACC,SAFE,CAAjB;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,UAAZ;;AACA,MAAGA,UAAU,CAACQ,IAAX,CAAgBC,CAAC,IAAG,GAAEA,CAAC,CAACX,IAAK,IAAGW,CAAC,CAACV,EAAG,EAAlB,KAAwB,GAAED,IAAK,IAAGC,EAAG,EAAxD,CAAH,EAEC;AACC,UAAMW,gBAAgB,GAAC;AAAEZ,MAAAA,IAAF;AAAOC,MAAAA,EAAP;AAAUY,MAAAA,KAAK,EAACX,UAAU,CAAC,CAAD,CAAV,CAAcW;AAA9B,KAAvB;AACAf,IAAAA,UAAU,CAACc,gBAAD,CAAV;AACA;;AACD,QAAM;AAACA,IAAAA;AAAD,MAAqBhB,WAAW,CAACkB,QAAZ,EAA3B;;AACA,MAAG,CAACF,gBAAJ,EAAqB;AACtBG,IAAAA,IAAI,CAACf,IAAD,EAAMC,EAAN,CAAJ;AAAc;AAEd;AACD,OAAO,SAASc,IAAT,CAAcf,IAAd,EAAmBC,EAAnB,EAAsBM,SAAtB,EAAgC;AACtC,MAAIS,QAAQ,GAAG;AAAChB,IAAAA,IAAD;AAAMC,IAAAA;AAAN,GAAf;;AACA,MAAGM,SAAH,EAAa;AACZS,IAAAA,QAAQ,CAACT,SAAT;AACA;;AACD,QAAMU,SAAS,GAAGtB,KAAK,CAACoB,IAAN,CAAY;AAACf,IAAAA,IAAD;AAAMC,IAAAA;AAAN,GAAZ,CAAlB;;AACA,MAAGgB,SAAH,EAAa;AACbnB,IAAAA,UAAU;AACT;AACD;;AACD,SAASA,UAAT,CAAoBc,gBAApB,EAAqC;AACpC,QAAMM,OAAO,GAAC;AACbC,IAAAA,KAAK,EAACxB,KAAK,CAACwB,KAAN,EADO;AAEbP,IAAAA;AAFa,GAAd;AAIAhB,EAAAA,WAAW,CAACwB,IAAZ,CAAiBF,OAAjB;AAEA","sourcesContent":["import * as Chess from 'chess.js'\r\nimport { BehaviorSubject } from 'rxjs'\r\n\r\nconst chess = new Chess()\r\n\r\n\r\nexport const gameSubject=new BehaviorSubject()\r\n\r\nexport function initGame(){\r\n  updateGame()\r\n}\r\n\r\nexport function handleMove(from,to){\r\n\tconst promotions=chess.moves({\r\n\t\tverbose:true\r\n\t}).filter(m=>m.promotion)\r\n\tconsole.log(promotions )\r\n\tif(promotions.some(p=>`${p.from}:${p.to}`=== `${from}:${to}`)\r\n\t\t)\r\n\t\t{\r\n\t\t\tconst pendingPromotion={ from,to,color:promotions[0].color }\r\n\t\t\tupdateGame(pendingPromotion)\r\n\t\t}\r\n\t\tconst {pendingPromotion} = gameSubject.getValue()\r\n\t\tif(!pendingPromotion){\r\n\tmove(from,to)}\r\n\r\n}\r\nexport function move(from,to,promotion){\r\n\tlet tempMove = {from,to}\r\n\tif(promotion){\r\n\t\ttempMove.promotion\r\n\t}\r\n const legalMove =\tchess.move( {from,to} )\r\n if(legalMove){\r\n\tupdateGame()\r\n }\r\n}\r\nfunction updateGame(pendingPromotion){\r\n\tconst newGame={\r\n\t\tboard:chess.board(),\r\n\t\tpendingPromotion\r\n\t}\r\n\tgameSubject.next(newGame)\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}